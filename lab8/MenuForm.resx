<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>